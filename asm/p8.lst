Microsoft (R) Macro Assembler Version 6.14.8444		    06/18/21 22:43:09
asm\p8.asm						     Page 1 - 1


				COMMENT ! Resta de dos numeros introducidos por teclado:
				        
				        Autor: Andrés Valenzuela Ramos
				        Fecha: 28/05/2021
				        !
				;DIRECTIVAS de ensmablador por acuerdo se escribiran en MAYUSCULAS y en la primera columna de la izquierda
				.MODEL SMALL
				.586
				.STACK  100h
 0000				.DATA
				        ;variables se definde dentro del .DATA 
 0000 50 72 6F 67 72 61		        titulo DB 'Programa para restar 3 numeros por teclado $'
       6D 61 20 70 61 72
       61 20 72 65 73 74
       61 72 20 33 20 6E
       75 6D 65 72 6F 73
       20 70 6F 72 20 74
       65 63 6C 61 64 6F
       20 24
 002C 0A 0D 49 74 65 72		        msgit DB 10,13, 'Iteracion numero $'
       61 63 69 6F 6E 20
       6E 75 6D 65 72 6F
       20 24
 0040 0D 0A 49 6E 74 72		        m1 DB 13,10,'Introducir primer numero: $'
       6F 64 75 63 69 72
       20 70 72 69 6D 65
       72 20 6E 75 6D 65
       72 6F 3A 20 24
 005D 0D 0A 49 6E 74 72		        m2 DB 13,10,'Introducir segundo numero: $'
       6F 64 75 63 69 72
       20 73 65 67 75 6E
       64 6F 20 6E 75 6D
       65 72 6F 3A 20 24
 007B 0D 0A 49 6E 74 72		        m3 DB 13,10,'Introducir segundo numero: $'
       6F 64 75 63 69 72
       20 73 65 67 75 6E
       64 6F 20 6E 75 6D
       65 72 6F 3A 20 24
 0099 30			        num1 DB '0'
 009A 30			        num2 DB '0'
 009B 30			        num3 DB '0'
 009C 30			        resultadoResta DB '0'
 009D 0D 0A 4C 61 20 72		        msgResta DB 13,10,'La resta es: $'
       65 73 74 61 20 65
       73 3A 20 24
 00AD 00			        contador DB 0
 0000				.CODE 
				        .STARTUP ;DIRECTIVA para el inicio de ensamblador
 0010  B8 ---- R		                mov ax, @data
 0013  8E D8			                mov ds, ax

 0015				    ciclo2:

 0015  FE 06 00AD R		                INC contador
 0019  B4 09			                MOV AH, 9
 001B  8D 16 002C R		                LEA DX, msgit
 001F  CD 21			                INT 21h

 0021  8A 16 00AD R		                mov dl, contador
 0025  80 C2 30			                ADD DL, 30H
 0028  B4 02			                mov ah, 02H
 002A  CD 21			                int 21h

				                ;  ---------Mensaje pidiendo que de primer numero
				                ; mov dx, OFFSET m1
				                ; mov ah, 9h   
				                ; int 21h 

				                ;  Espera de entrada de usuario y se guarda en al
				                ;  MOV AH, 01H
				                ;  INT 21H
				                ;  SUB AL, 30H
				                ;  mov num1, al
				                ;  mov ch, num1

				                ;  ----------Mensaje pidiendo segundo numero
				                ;  mov dx, OFFSET m2
				                ;  mov ah, 9h   
				                ;  int 21h 

				                ;  Espera de entrada de usuario y se guarda en al
				                ;  MOV AH, 01H
				                ;  INT 21H
				                ;  SUB AL, 30H 
				                ;  mov num2, al
				                ;  mov bl, num2

				                ;  ----------Mensaje pidiendo tercer numero
				                ;  mov dx, OFFSET m3
				                ;  mov ah, 9h   
				                ;  int 21h 

				                ;  Espera de entrada de usuario y se guarda en al
				                ;  MOV AH, 01H
				                ;  INT 21H
				                ;  SUB AL, 30H
				                ;  mov num3, al
				                ;  mov cl, num3

 002C  E8 0021			                call leerCaracter

 002F  2A EB			                 SUB ch, bl
 0031  2A E9			                 SUB ch, cl
 0033  80 C5 30			                 ADD ch, 30h
 0036  88 2E 009C R		                 mov resultadoResta, ch

				                ;  mov dx, OFFSET msgResta
				                ;  mov ah, 9h   
				                ;  int 21h 
 003A  E8 0050			                call imprimirCadena

				                ;  mov dl, resultadoResta
				                ;  mov ah, 02H
				                ;  int 21h
 003D  E8 0055			                call imprimirCaracter
				                 
 0040  80 3E 00AD R 06		                 CMP contador, 6
 0045  75 CE			                 JNE ciclo2
				                 ;;;

 0047  B8 4C00			                mov ax, 4c00h
 004A  CD 21			                int 21h
				        .EXIT ;DIRECTIVA donde terminará el ensablador
				        ;Procedimiento para leer caracter
 0050				        leerCaracter proc
				             ;---------Mensaje pidiendo que de primer numero
 0050  BA 0040 R		                mov dx, OFFSET m1
 0053  B4 09			                mov ah, 9h   
 0055  CD 21			                int 21h 

				                 ;Espera de entrada de usuario y se guarda en al
 0057  B4 01			                 MOV AH, 01H
 0059  CD 21			                 INT 21H
 005B  2C 30			                 SUB AL, 30H
 005D  A2 0099 R		                 mov num1, al
 0060  8A 2E 0099 R		                 mov ch, num1

				                 ;----------Mensaje pidiendo segundo numero
 0064  BA 005D R		                 mov dx, OFFSET m2
 0067  B4 09			                 mov ah, 9h   
 0069  CD 21			                 int 21h 

				                 ;Espera de entrada de usuario y se guarda en al
 006B  B4 01			                 MOV AH, 01H
 006D  CD 21			                 INT 21H
 006F  2C 30			                 SUB AL, 30H
 0071  A2 009A R		                 mov num2, al
 0074  8A 1E 009A R		                 mov bl, num2

				                 ;----------Mensaje pidiendo tercer numero
 0078  BA 007B R		                 mov dx, OFFSET m3
 007B  B4 09			                 mov ah, 9h   
 007D  CD 21			                 int 21h 

				                 ;Espera de entrada de usuario y se guarda en al
 007F  B4 01			                 MOV AH, 01H
 0081  CD 21			                 INT 21H
 0083  2C 30			                 SUB AL, 30H
 0085  A2 009B R		                 mov num3, al
 0088  8A 0E 009B R		                 mov cl, num3
 008C  C3			                 ret
 008D				        leerCaracter endp
				        ;Procedimiento para imprimir caracter
 008D				        imprimirCadena proc
 008D  BA 009D R		             mov dx, OFFSET msgResta
 0090  B4 09			                 mov ah, 9h   
 0092  CD 21			                 int 21h 
 0094  C3			                 ret
 0095				        imprimirCadena endp
				        ;Procedimiento para imprimir cadena
 0095				        imprimirCaracter proc
 0095  8A 16 009C R		                 mov dl, resultadoResta
 0099  B4 02			                 mov ah, 02H
 009B  CD 21			                 int 21h
 009D  C3			                 ret
 009E				        imprimirCaracter endp
				        
				END  
Microsoft (R) Macro Assembler Version 6.14.8444		    06/18/21 22:43:09
asm\p8.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	16 Bit	 00AE	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 0100	  Para	  Stack	  'STACK'	 
_TEXT  . . . . . . . . . . . . .	16 Bit	 009E	  Word	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

imprimirCadena . . . . . . . . .	P Near	 008D	  _TEXT	Length= 0008 Public
imprimirCaracter . . . . . . . .	P Near	 0095	  _TEXT	Length= 0009 Public
leerCaracter . . . . . . . . . .	P Near	 0050	  _TEXT	Length= 003D Public


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0000h	 
@Model . . . . . . . . . . . . .	Number	 0002h	 
@Startup . . . . . . . . . . . .	L Near	 0000	  _TEXT	
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
ciclo2 . . . . . . . . . . . . .	L Near	 0015	  _TEXT	
contador . . . . . . . . . . . .	Byte	 00AD	  _DATA	
m1 . . . . . . . . . . . . . . .	Byte	 0040	  _DATA	
m2 . . . . . . . . . . . . . . .	Byte	 005D	  _DATA	
m3 . . . . . . . . . . . . . . .	Byte	 007B	  _DATA	
msgResta . . . . . . . . . . . .	Byte	 009D	  _DATA	
msgit  . . . . . . . . . . . . .	Byte	 002C	  _DATA	
num1 . . . . . . . . . . . . . .	Byte	 0099	  _DATA	
num2 . . . . . . . . . . . . . .	Byte	 009A	  _DATA	
num3 . . . . . . . . . . . . . .	Byte	 009B	  _DATA	
resultadoResta . . . . . . . . .	Byte	 009C	  _DATA	
titulo . . . . . . . . . . . . .	Byte	 0000	  _DATA	

	   0 Warnings
	   0 Errors
